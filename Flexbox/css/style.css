html {
    box-sizing: border-box;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

.container {
  background-color: #333;
  height: 400px;
  width: 100%;
  /* Define que una caja será flexbox de bloque o flexbox de línea */
  /* flex | inline-flex */
  display: flex;

  /* Define el eje principal (main axis) row - x, column - y */
  /* row | row-reverse | column | column-reverse */
  flex-direction: column;

  /* Define si la caja flexbox envuelve o NO a sus hijos */
  /* nowrap | wrap | wrap-reverse */
  flex-wrap: nowrap;

  /* Es un shorthand de flex-direction y flex-wrap */
  flex-flow: column wrap;
  flex-flow: row wrap;

  /* Define la alineación de los hijos en el eje principal (main axis) */
  /* flex-start | center | flex-end | space-between | space-around | space-evenly */
  justify-content: flex-start;

  /* Define la alineación de los hijos en el eje transversal (cross axis), dentro de cada línea */
  /* stretch | flex-start | flex-end | center | baseline */
  align-items: stretch;

  /* Define la alineación de los hijos en el eje transversal (cross axis), NO funciona cuando los hijos están en UNA sóla línea (es decir cuando flex-wrap tiene el valor de nowrap, NO FUNCIONA) */
  /* flex-start | flex-end | center | space-between | space-around | space-evenly | stretch */
  align-content: flex-start;
}

.flex-item {
    background-color: orangered;
    border: thin solid gray;
    text-align: center;
    width: 75px;
    height: 75px;
    
    /* Cuando la caja flexbox tenga espacio sobrante, es la habilidad o el factor de crecer, valor por defecto es 0, NO se aceptan valores negativos */
    flex-grow: 1;

    /* Cuando la caja flexbox NO tenga espacio sobrante, es la habilidad o el factor de encogerse, valor por defecto es 1, NO se aceptan valores negativos */
    flex-shrink: 100;

    /* Es el tamaño del elemento hijo dentro de la línea de la caja flexbox
    Si la caja flexbox tiene dirección de fila, flex-basis representa el width
    Si la caja flexbox tiene dirección de columna, flex-basis representa el height
    Valor por defecto auto */
    flex-basis: auto;
    flex-basis: 100px;

    /* Es un shorthand de las propiedades flex-grow flex-shrink y flex-basis, en ese orden*/
    flex: 1 10 150px;

    /* stretch | flex-start | flex-end | center | baseline */
    /* Sobreescribe el valor de la propiedad align-items sólo para el elemento hijo especificado */
    align-self: stretch;
}

.flex-order {
    /* Representa el orden que tendrán los elementos hijos en la caja flexbox
    Valor por defecto 0
    Se aceptan valores positivos y negativos
    Un valor menor siempre irá antes que un valor mayor */
    order: 1;
    order: -1;
    order: 0;

    /* flex-grow: 5; */
}

.flex-item:nth-child(even) {
    background-color: orange;
}

.flex-item:nth-child(12) {
    align-self: flex-end;
}